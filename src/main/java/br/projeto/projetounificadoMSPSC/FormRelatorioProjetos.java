/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.projeto.projetounificadoMSPSC;

import static br.projeto.projetounificadoMSPSC.FormProjetoLista.projetoForm;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import java.io.File;
import java.io.FileOutputStream;
/**
 *
 * @author allan
 */
public class FormRelatorioProjetos extends javax.swing.JFrame {

    /**
     * Creates new form FormRelatorioProjetos
     */
    
    public void recuperarListaProjeto() {
        Vector listaProjeto = projetoForm.recuperarListaProjetos();
        
        Vector nomesColunas = new Vector(); 
        nomesColunas.add("ID");
        nomesColunas.add("Nome");
        nomesColunas.add("Descrição");
        nomesColunas.add("Usuário Proprietário");
        
        DefaultTableModel dataModel = new DefaultTableModel();
        
        dataModel.setDataVector(listaProjeto, nomesColunas);
                
        tblProjetos.setModel(dataModel);
    }
    
    public FormRelatorioProjetos() {
        initComponents();
        
        recuperarListaProjeto();
    }
    
    public ResultSet carregaTabela(String tipo, String arg) throws SQLException {
        String argumento = tipo + " " + "LIKE \"%" + arg + "%\"";
        
        String sql = "SELECT P.ID, P.Nome, P.Descricao, U.NomeUsuario AS UsuarioProprietario "
                   + "FROM Projetos P "
                   + "LEFT JOIN Usuarios U ON (P.UsuarioProprietario = U.ID) "
                   + "WHERE " + argumento + "";
        
            ConnectionFactory conexaoBD = new ConnectionFactory();
            Connection conn = conexaoBD.getConnection();
        
            Statement stm = conn.createStatement();
            
            ResultSet resultado; 
            resultado = stm.executeQuery(sql);
            
            return resultado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        cbFiltro = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProjetos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Descrição", "Usuário Proprietário" }));

        jLabel4.setText("Escolha a opção pela qual deseja filtrar abaixo:");

        tblProjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descrição", "Usuário Proprietário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProjetos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnVoltar, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        FormProjetoLista projetoLista = new FormProjetoLista();
        projetoLista.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        // TODO add your handling code here:
        String tipo = "";
        
        String escolha = cbFiltro.getSelectedItem().toString().trim();
        
        if (escolha.equals("Nome")) {
            tipo = " " + "P.Nome";
        }
        if (escolha.equals("Descrição")) {
            tipo = " " + "P.Descricao";
        }
        if (escolha.equals("Usuário Proprietário")) {
            tipo = " " + "U.NomeUsuario";
        }
        
        String arg = txtFiltro.getText();
        
        DefaultTableModel mp1 = (DefaultTableModel) tblProjetos.getModel();
        
        int l = mp1.getRowCount();
        
        if(l>0) {
            while(l>0) {
                ((DefaultTableModel) tblProjetos.getModel()).removeRow(l-1);
                l--;
            }
        }
        
        try {
            ResultSet rs = carregaTabela(tipo, arg);
            
            DefaultTableModel mp = (DefaultTableModel) tblProjetos.getModel();
            
            while(rs.next()){
                String Coluna0 = rs.getString("P.ID").toString().trim();
                String Coluna1 = rs.getString("P.Nome").toString().trim();
                String Coluna2 = rs.getString("P.Descricao").toString().trim();
                String Coluna3 = rs.getString("UsuarioProprietario").toString().trim();
                
                mp.addRow(new String[]{Coluna0, Coluna1, Coluna2, Coluna3});
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher a coluna com os dados solicitados!");
        }
    }//GEN-LAST:event_txtFiltroKeyReleased

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cbFiltro;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProjetos;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
